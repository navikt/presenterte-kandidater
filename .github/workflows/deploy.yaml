name: Build, Scan and Deploy

on: [push, workflow_dispatch]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Bygg og push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Push Docker image to GAR
        id: docker-build-push
        uses: nais/docker-build-push@v0
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        with:
          team: toi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: 'NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}'
          # The tag "latest" should only be applied to images based on the default branch
          tag: ${{ contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) && 'latest' || github.sha }}
      - name: Set Image Output
        id: set-image-output
        run: echo "image=${{ steps.docker-build-push.outputs.image }}" >> $GITHUB_ENV

  call-trivy-security-scan:
    needs: build
    uses: navikt/toi-github-actions-workflows/.github/workflows/trivy-security-scan.yaml@main
    with:
      image: ${{ needs.build.outputs.image }}
    permissions:
      id-token: write
      security-events: write
    secrets: inherit

  deploy-til-dev:
    name: Deploy til dev-gcp
    needs:
      - build
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/next-js'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev-gcp.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-to-prod:
    name: Deploy til prod-gcp
    needs:
      - build
      - call-trivy-security-scan
      - deploy-til-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod-gcp.yaml
          VAR: image=${{ needs.build.outputs.image }}
